{"ast":null,"code":"var _jsxFileName = \"/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport API from '../../api';\nimport swal from 'sweetalert';\nimport styles from './signin.module.css';\nimport Navbarvv from '../Homepage/navbarvv';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport CookieService from '../../CookieService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  let history = useHistory();\n  const [state, setValue] = useState({\n    username: \"\",\n    password: \"\",\n    mail: \"\"\n  });\n  const {\n    username,\n    password,\n    mail\n  } = state;\n\n  function setState(nextState) {\n    setValue(prevState => ({ ...prevState,\n      ...nextState\n    }));\n  }\n\n  function handleChange(e) {\n    let {\n      name,\n      value\n    } = e.target;\n    setState({\n      [name]: value\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.nativeEvent.preventDefault();\n\n    if (username && password && mail) {\n      try {\n        const body = new FormData();\n        body.append('username', username);\n        body.append('mail', mail);\n        body.append('password', password);\n        const result = await API.post(`users`, body, {\n          headers: {\n            'Accept': 'multipart/form-data'\n          }\n        });\n        console.log(\"result is :\", result);\n\n        if (result.Token) {\n          const options = {\n            path: '/'\n          };\n          CookieService.set('Token', result.Token, options);\n          CookieService.set('_id', result._id, options);\n          CookieService.set('Role', result.Role, options);\n\n          if (CookieService.get(\"Token\") && CookieService.get(\"_id\") && CookieService.get(\"Role\")) {\n            history.push('/');\n          }\n        } else {\n          swal(\"Something Went Wrong  \", \" \", \"warning\");\n        }\n      } catch (e) {\n        alert(e);\n      }\n    } else {\n      swal(\"Make Sure To Enter All Fields\", \" \", \"warning\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbarvv, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: handleSubmit,\n          className: styles.genralform,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: styles.generalabel,\n            children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"username\",\n              name: \"username\",\n              onChange: handleChange,\n              className: \"inputu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"mail\",\n            className: styles.generalabel,\n            children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              name: \"mail\",\n              className: \"inputu\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: styles.generalabel,\n            children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"password\",\n              name: \"password\",\n              className: \"inputu\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.submitbtn,\n            type: \"submit\",\n            value: \"signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Register, \"fofFaRctozV9X4JMKkoJd2enDQU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/register.jsx"],"names":["React","API","swal","styles","Navbarvv","useState","useHistory","CookieService","Register","history","state","setValue","username","password","mail","setState","nextState","prevState","handleChange","e","name","value","target","handleSubmit","nativeEvent","preventDefault","body","FormData","append","result","post","headers","console","log","Token","options","path","set","_id","Role","get","push","alert","genralform","generalabel","submitbtn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../../api';\nimport swal from 'sweetalert';\nimport styles from './signin.module.css';\nimport Navbarvv from '../Homepage/navbarvv';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport CookieService from '../../CookieService';\n\n\nfunction Register() {\n\n    let history = useHistory();\n\n    const [state, setValue] = useState({\n        username: \"\",\n        password: \"\",\n        mail: \"\",\n    });\n\n\n    const { username, password, mail } = state;\n\n    function setState(nextState) {\n        setValue((prevState) => ({\n            ...prevState,\n            ...nextState,\n        }));\n    }\n\n    function handleChange(e) {\n        let { name, value } = e.target;\n        setState({ [name]: value });\n    }\n\n\n    async function handleSubmit(e) {\n\n        e.nativeEvent.preventDefault();\n\n        if (username && password && mail) {\n\n            try {\n\n                const body = new FormData();\n\n                body.append('username', username);\n                body.append('mail', mail);\n                body.append('password', password);\n\n                const result = await API.post(`users`, body, {\n                    headers: {\n                        'Accept': 'multipart/form-data',\n                    },\n                });\n\n                console.log(\"result is :\", result);\n\n                if (result.Token) {\n                    const options = { path: '/', };\n                    CookieService.set('Token', result.Token, options);\n                    CookieService.set('_id', result._id, options);\n                    CookieService.set('Role', result.Role, options);\n\n                    if (CookieService.get(\"Token\") && CookieService.get(\"_id\") && CookieService.get(\"Role\")) {\n                        history.push('/');\n                    }\n                } else {\n                    swal(\"Something Went Wrong  \", \" \", \"warning\");\n                }\n            } catch (e) {\n                alert(e);\n            }\n        }\n        else {\n            swal(\"Make Sure To Enter All Fields\", \" \", \"warning\");\n        }\n        \n        return (\n            <div>\n\n                <div>\n                    <Navbarvv />\n                    <form action=\"\" onSubmit={handleSubmit} className={styles.genralform}  >\n                        <label htmlFor=\"username\" className={styles.generalabel}>\n                            Username\n                            <input type=\"text\" placeholder=\"username\" name=\"username\" onChange={handleChange} className=\"inputu\" />\n                        </label>\n\n                        <label htmlFor=\"mail\" className={styles.generalabel}>\n                            Email\n                            <input type=\"email\" placeholder=\"Email\" name=\"mail\" className=\"inputu\" onChange={handleChange} />\n                        </label>\n\n                        <label htmlFor=\"password\" className={styles.generalabel}>\n                            Password\n                            <input type=\"password\" placeholder=\"password\" name=\"password\" className=\"inputu\" onChange={handleChange} />\n                        </label>\n                        <input className={styles.submitbtn} type=\"submit\" value=\"signin\" />\n                    </form>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}