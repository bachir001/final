{"ast":null,"code":"var _jsxFileName = \"/var/www/html/MechanicalDelevery/react _part/src/Components/shopsp/addshop.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { State, City } from 'country-state-city';\nimport LoginStatus from '../../LoginStatus';\nimport CookieService from '../../CookieService';\nimport styles from '../Dashboard/users/userdesign.module.css';\nimport Navbarvv from '../Homepage/navbarvv';\nimport API from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Newshop() {\n  _s();\n\n  const [shopname, setShopname] = useState();\n  const [locationInfo, setLocationInfo] = useState();\n  const [phonenumber, setPhonenumber] = useState();\n  const [shopimg, setShopimg] = useState();\n  const [cities, setCities] = useState([]);\n  const [region, setRegion] = useState('nothing');\n  const id = CookieService.get('_id');\n  const leb = State.getStatesOfCountry('LB');\n\n  const dealwithregion = async code => {\n    setRegion(\"filled\");\n    setCities(City.getCitiesOfState('LB', code.toString()));\n  };\n\n  var file;\n\n  const onChangeFile = async e => {\n    e.preventDefault(e);\n    file = await e.target.files[0];\n    setShopimg(file);\n  };\n\n  const addshop = async e => {\n    e.preventDefault(e);\n\n    try {\n      const body = new FormData();\n      body.append('shopname', shopname);\n      body.append('phonenumber', phonenumber);\n      body.append('locationInfo', locationInfo);\n      body.append('shopimg', shopimg);\n      body.append('shopadder', id);\n      const res = await API.post(`shops`, body, {\n        headers: {\n          'Accept': 'multipart/form-data'\n        }\n      });\n      console.log(\"res\", res);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addshop,\n    children: [/*#__PURE__*/_jsxDEV(Navbarvv, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginStatus, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"shopname\",\n      className: styles.generalabel,\n      style: {\n        marginTop: \"3rem\"\n      },\n      children: [\"shopname :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        autoComplete: \"off\",\n        className: \"inputu\",\n        type: \"text\",\n        name: \"shopname\",\n        required: true,\n        onChange: e => {\n          setShopname(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"phonenumber\",\n      className: styles.generalabel,\n      children: [\"phonenumber :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        autoComplete: \"off\",\n        className: \"inputu\",\n        type: \"text\",\n        name: \"phonenumber\",\n        required: true,\n        onChange: e => {\n          setPhonenumber(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"regionInfo\",\n      children: [\"Select Region :\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        required: true,\n        name: \"regionInfo\",\n        className: \"inputu\",\n        onChange: e => dealwithregion(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), leb.map(lb => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lb.isoCode,\n            children: lb.name\n          }, lb.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), region !== \"nothing\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"regionInfo\",\n        children: [\"Select City:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          required: true,\n          name: \"locationInfo\",\n          className: \"inputu\",\n          onChange: e => setLocationInfo(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this), cities.map(ct => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ct.name,\n              children: ct.name\n            }, ct.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 41\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pic\",\n        className: styles.chooseimg,\n        children: \"choose image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        autoComplete: \"off\",\n        className: styles.fileinput,\n        type: \"file\",\n        id: \"pic\",\n        accept: \"image/*\",\n        multiple: false,\n        onChange: onChangeFile,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        autoComplete: \"off\",\n        className: styles.submitbtn,\n        type: \"submit\",\n        value: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Newshop, \"zDDruAaE+Jd57EqrB7Rpg/0zulA=\");\n\n_c = Newshop;\nexport default Newshop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newshop\");","map":{"version":3,"sources":["/var/www/html/MechanicalDelevery/react _part/src/Components/shopsp/addshop.jsx"],"names":["React","useState","State","City","LoginStatus","CookieService","styles","Navbarvv","API","Newshop","shopname","setShopname","locationInfo","setLocationInfo","phonenumber","setPhonenumber","shopimg","setShopimg","cities","setCities","region","setRegion","id","get","leb","getStatesOfCountry","dealwithregion","code","getCitiesOfState","toString","file","onChangeFile","e","preventDefault","target","files","addshop","body","FormData","append","res","post","headers","console","log","generalabel","marginTop","value","map","lb","isoCode","name","ct","chooseimg","fileinput","submitbtn"],"mappings":"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","sourcesContent":["import { React, useState } from 'react';\nimport { State, City } from 'country-state-city';\nimport LoginStatus from '../../LoginStatus';\nimport CookieService from '../../CookieService';\nimport styles from '../Dashboard/users/userdesign.module.css';\nimport Navbarvv from '../Homepage/navbarvv';\nimport API from '../../api';\n\n\nfunction Newshop() {\n\n    const [shopname, setShopname] = useState();\n    const [locationInfo, setLocationInfo] = useState();\n    const [phonenumber, setPhonenumber] = useState();\n    const [shopimg, setShopimg] = useState();\n    const [cities, setCities] = useState([]);\n    const [region, setRegion] = useState('nothing');\n    const id = CookieService.get('_id');\n\n\n\n    const leb = State.getStatesOfCountry('LB');\n\n\n    const dealwithregion = async (code) => {\n\n        setRegion(\"filled\");\n\n        setCities(City.getCitiesOfState('LB', code.toString()));\n\n    }\n\n\n    var file;\n\n    const onChangeFile = async (e) => {\n        e.preventDefault(e);\n        file = await e.target.files[0];\n        setShopimg(file);\n\n    }\n\n    const addshop = async (e) => {\n        e.preventDefault(e);\n\n        try {\n\n            const body = new FormData();\n\n            body.append('shopname', shopname);\n            body.append('phonenumber', phonenumber);\n            body.append('locationInfo', locationInfo);\n            body.append('shopimg', shopimg);\n            body.append('shopadder', id);\n            const res = await API.post(`shops`, body, {\n                headers: {\n                    'Accept': 'multipart/form-data',\n                },\n            });\n            console.log(\"res\",res);\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n\n          \n\n            <form onSubmit={addshop}>\n      \n            <Navbarvv />\n            <LoginStatus />\n\n                <label htmlFor=\"shopname\" className={styles.generalabel} style={{ marginTop: \"3rem\" }}>\n                    shopname :\n                    <input autoComplete=\"off\" className=\"inputu\" type=\"text\" name=\"shopname\" required onChange={(e) => { setShopname(e.target.value) }} />\n                </label>\n\n\n                <label htmlFor=\"phonenumber\" className={styles.generalabel}>\n                    phonenumber :\n                    <input autoComplete=\"off\" className=\"inputu\" type=\"text\" name=\"phonenumber\" required onChange={(e) => { setPhonenumber(e.target.value) }} />\n                </label>\n\n\n\n                <label htmlFor=\"regionInfo\" >\n                    Select Region :\n                    <br />\n                    <select\n                        required\n                        name=\"regionInfo\"\n                        className=\"inputu\"\n                        onChange={e => dealwithregion(e.target.value)}\n                    >\n                        <option value=\"\">None</option>\n\n                        {leb.map((lb) => {\n                            return (\n                                <option\n                                    value={lb.isoCode}\n                                    key={lb.name}\n                                >{lb.name}\n                                </option>\n                            )\n                        })}\n                    </select>\n\n                </label>\n\n\n                {region !== \"nothing\" ? (\n\n                    <div>\n\n                        <label htmlFor=\"regionInfo\" >\n\n                            Select City:\n                            <br />\n                            <select\n                                required\n                                name=\"locationInfo\"\n                                className=\"inputu\"\n                                onChange={e => setLocationInfo(e.target.value)}\n                            >\n                                <option value=\"\">None</option>\n\n                                {cities.map((ct) => {\n                                    return (\n                                        <option\n                                            value={ct.name}\n                                            key={ct.name}\n                                        >{ct.name}\n                                        </option>\n                                    )\n                                })}\n\n                            </select>\n\n                        </label>\n\n                        <p>\n\n                        </p>\n\n                    </div>\n                ) : (\n                    <p> </p>\n                )}\n\n\n                <div>\n                    <label htmlFor=\"pic\" className={styles.chooseimg} >\n                        choose image\n                    </label>\n                    <input autoComplete=\"off\" className={styles.fileinput} type=\"file\" id=\"pic\" accept=\"image/*\" multiple={false} onChange={onChangeFile} required />\n                </div>\n\n                <div>\n                    <input autoComplete=\"off\" className={styles.submitbtn} type=\"submit\" value=\"Add\" />\n                </div>\n\n            </form>\n\n\n    )\n}\n\nexport default Newshop;\n"]},"metadata":{},"sourceType":"module"}