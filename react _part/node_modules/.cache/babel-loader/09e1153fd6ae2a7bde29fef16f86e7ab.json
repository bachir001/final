{"ast":null,"code":"var _jsxFileName = \"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/editshops.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport styles from '../users/userdesign.module.css';\nimport { State, City } from 'country-state-city';\nimpo;\nimport Sidebar from '../sidebar';\nimport API from '../../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editshop({\n  match\n}) {\n  _s();\n\n  const id = match.params.id;\n  const [shopname, setShopname] = useState();\n  const [locationInfo, setLocationInfo] = useState();\n  const [phonenumber, setPhonenumber] = useState();\n  const [shopimg, setShopimg] = useState();\n  const [accept, setAccept] = useState();\n  const [region, setRegion] = useState('nothing');\n  const [cities, setCities] = useState([]);\n  let history = useHistory();\n  var file;\n\n  const onChangeFile = async e => {\n    e.preventDefault(e);\n    file = await e.target.files[0];\n    setShopimg(file);\n  };\n\n  const leb = State.getStatesOfCountry('LB');\n\n  const dealwithregion = async code => {\n    setRegion(\"filled\");\n    setCities(City.getCitiesOfState('LB', code.toString()));\n  };\n\n  const getShop = async () => {\n    try {\n      await API.get(`shops/${id}`).then(res => {\n        const result = res.data;\n        setShopname(result.shopname);\n        setLocationInfo(result.locationInfo);\n        setPhonenumber(result.phonenumber);\n        setShopimg(result.shopimg);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const edituser = async e => {\n    e.preventDefault(e);\n\n    try {\n      const body = new FormData();\n      body.append('shopname', shopname);\n      body.append('phonenumber', phonenumber);\n      body.append('locationInfo', locationInfo);\n      body.append('shopimg', shopimg);\n      body.append('accept', accept);\n      body.append('shopadder', '614eee3bae058617c4e7c960');\n      await API.put(`shops/${id}`, body, {\n        headers: {\n          'Accept': 'multipart/form-data'\n        }\n      });\n      history.push('/shops');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getShop();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.adduserwrapper,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: edituser,\n      className: styles.genralform,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"shopname\",\n        className: styles.generalabel,\n        children: [\"shopname :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputu\",\n          type: \"text\",\n          name: \"shopname\",\n          value: shopname,\n          onChange: e => {\n            setShopname(e.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phonenumber\",\n        className: styles.generalabel,\n        children: [\"phonenumber :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputu\",\n          type: \"text\",\n          name: \"phonenumber\",\n          value: phonenumber,\n          onChange: e => {\n            setPhonenumber(e.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"regionInfo\",\n        children: [\"Select Region :\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"regionInfo\",\n          className: \"inputu\",\n          onChange: e => dealwithregion(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), leb.map(lb => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lb.isoCode,\n              children: lb.name\n            }, lb.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), region !== \"nothing\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"regionInfo\",\n          children: [\"Select City:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            required: true,\n            name: \"locationInfo\",\n            className: \"inputu\",\n            onChange: e => setLocationInfo(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), cities.map(ct => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: ct.name,\n                children: ct.name\n              }, ct.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"18px\"\n          },\n          children: \"  shop approvement : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"paid\",\n          value: \"yes\",\n          onChange: e => setAccept(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), \"yes\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: styles.noradio,\n          name: \"paid\",\n          value: \"no\",\n          onChange: e => setAccept(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), \"no\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pic\",\n          className: styles.chooseimg,\n          children: \"choose image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.fileinput,\n          type: \"file\",\n          id: \"pic\",\n          accept: \"image/*\",\n          multiple: false,\n          onChange: onChangeFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.submitbtn,\n          type: \"submit\",\n          value: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Editshop, \"/eullqyJ4XbNBHux2BTJxuwN9TM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Editshop;\nexport default Editshop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editshop\");","map":{"version":3,"sources":["/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/editshops.jsx"],"names":["React","useState","useEffect","useHistory","styles","State","City","impo","Sidebar","API","Editshop","match","id","params","shopname","setShopname","locationInfo","setLocationInfo","phonenumber","setPhonenumber","shopimg","setShopimg","accept","setAccept","region","setRegion","cities","setCities","history","file","onChangeFile","e","preventDefault","target","files","leb","getStatesOfCountry","dealwithregion","code","getCitiesOfState","toString","getShop","get","then","res","result","data","console","log","edituser","body","FormData","append","put","headers","push","adduserwrapper","genralform","generalabel","value","map","lb","isoCode","name","ct","fontSize","noradio","chooseimg","fileinput","submitbtn"],"mappings":"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","sourcesContent":["import { React, useState, useEffect  } from 'react';\nimport { useHistory } from 'react-router';\nimport styles from '../users/userdesign.module.css';\nimport { State, City } from 'country-state-city';\nimpo\nimport Sidebar from '../sidebar';\nimport API from '../../../api';\n\n\n\n\n\nfunction Editshop({ match }) {\n\n    const id = match.params.id;\n    const [shopname, setShopname] = useState();\n    const [locationInfo, setLocationInfo] = useState();\n    const [phonenumber, setPhonenumber] = useState();\n    const [shopimg, setShopimg] = useState();\n    const [accept, setAccept] = useState();\n    const [region, setRegion] = useState('nothing');\n    const [cities, setCities] = useState([]);\n    let history=useHistory();\n\n\n    var file;\n\n    const onChangeFile = async (e) => {\n        e.preventDefault(e);\n        file = await e.target.files[0];\n        setShopimg(file);\n\n    }\n\n\n    const leb = State.getStatesOfCountry('LB');\n\n\n\n\n    const dealwithregion = async (code) => {\n\n        setRegion(\"filled\");\n\n        setCities(City.getCitiesOfState('LB', code.toString()));\n\n    }\n\n\n    const getShop = async () => {\n        try {\n            await API.get(`shops/${id}`).then((res) => {\n                const result = res.data;\n                setShopname(result.shopname);\n                setLocationInfo(result.locationInfo);\n                setPhonenumber(result.phonenumber);\n                setShopimg(result.shopimg)\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const edituser = async (e) => {\n\n        e.preventDefault(e);\n\n        try {\n\n            const body = new FormData();\n\n            body.append('shopname', shopname);\n            body.append('phonenumber', phonenumber);\n            body.append('locationInfo', locationInfo);\n            body.append('shopimg', shopimg);\n            body.append('accept', accept);\n            body.append('shopadder', '614eee3bae058617c4e7c960');\n            await API.put(`shops/${id}`, body, {\n                headers: {\n                    'Accept': 'multipart/form-data',\n                },\n            });\n\n            history.push('/shops');\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        getShop();\n    }, []);\n\n\n    return (\n\n        <div className={styles.adduserwrapper}>\n\n            <Sidebar />\n\n            <form onSubmit={edituser} className={styles.genralform}>\n\n\n                <label htmlFor=\"shopname\" className={styles.generalabel}>\n                    shopname :\n                    <input className=\"inputu\" type=\"text\" name=\"shopname\" value={shopname} onChange={(e) => { setShopname(e.target.value) }} required />\n                </label>\n\n\n                <label htmlFor=\"phonenumber\" className={styles.generalabel}>\n                    phonenumber :\n                    <input className=\"inputu\" type=\"text\" name=\"phonenumber\" value={phonenumber} onChange={(e) => { setPhonenumber(e.target.value) }} required />\n                </label>\n\n\n                <label htmlFor=\"regionInfo\" >\n                    Select Region :\n                    <br />\n                    <select\n                        \n                        name=\"regionInfo\"\n                        className=\"inputu\"\n                        onChange={e => dealwithregion(e.target.value)}\n                    >\n                        <option value=\"\">None</option>\n\n                        {leb.map((lb) => {\n                            return (\n                                <option\n                                    value={lb.isoCode}\n                                    key={lb.name}\n                                >{lb.name}\n                                </option>\n                            )\n                        })}\n                    </select>\n\n                </label>\n\n                <div>\n\n                </div>\n\n\n                {region !== \"nothing\" ? (\n\n                    <div>\n\n                        <label htmlFor=\"regionInfo\" >\n\n                            Select City:\n                            <br />\n                            <select\n                                required\n                                name=\"locationInfo\"\n                                className=\"inputu\"\n                                onChange={e => setLocationInfo(e.target.value)}\n                            >\n                                <option value=\"\">None</option>\n\n                                {cities.map((ct) => {\n                                    return (\n                                        <option\n                                            value={ct.name}\n                                            key={ct.name}\n                                        >{ct.name}\n                                        </option>\n                                    )\n                                })}\n\n                            </select>\n\n                        </label>\n\n                        <p>\n\n                        </p>\n\n                    </div>\n                ) : (\n                    <p> </p>\n                )}\n\n                <div >\n                    <p style={{ fontSize: \"18px\" }}>  shop approvement : </p>\n                    <input\n                        type=\"radio\"\n                        name=\"paid\"\n                        value={\"yes\"}\n                        onChange={(e) => setAccept(e.target.value)}\n                        required\n                    />\n                    yes\n\n                    <input\n                        type=\"radio\"\n                        className={styles.noradio}\n                        name=\"paid\"\n                        value={\"no\"}\n                        onChange={(e) => setAccept(e.target.value)}\n                        required\n                    />\n                    no\n                </div>\n\n                <div>\n                    <label htmlFor=\"pic\" className={styles.chooseimg}>\n                        choose image\n                    </label>\n                    <input className={styles.fileinput} type=\"file\" id=\"pic\" accept=\"image/*\" multiple={false} onChange={onChangeFile} />\n                </div>\n\n                <div>\n                    <input className={styles.submitbtn} type=\"submit\" value=\"Update\" />\n                </div>\n\n            </form>\n\n        </div>\n\n    )\n}\n\nexport default Editshop;\n"]},"metadata":{},"sourceType":"module"}