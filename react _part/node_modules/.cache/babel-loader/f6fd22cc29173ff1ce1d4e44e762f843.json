{"ast":null,"code":"var _jsxFileName = \"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport swal from 'sweetalert';\nimport { Card, ListGroupItem, ListGroup } from \"react-bootstrap\";\nimport styles from './usercard.module.css';\nimport Navbardash from \"../navbardash\";\nimport API from '../../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Users() {\n  _s();\n\n  const [Users, setUsers] = useState([]);\n\n  const getUsers = async () => {\n    try {\n      await API.get(`users`).then(res => {\n        const result = res.data;\n        setUsers(result);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteUser = async id => {\n    const willDelete = await swal({\n      title: \"Delete\",\n      text: \"Are you sure?\",\n      icon: \"warning\",\n      dangerMode: true\n    });\n\n    if (willDelete) {\n      try {\n        let res = await API.delete(`users/${id}`);\n        console.log(res.data);\n\n        if (res.data.success) {\n          await swal(\"deleted\");\n        } else {\n          await swal(\"\", res, \"error\");\n        }\n\n        window.location.reload();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbardash, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.usercardwrapper,\n      children: Users.map(us => /*#__PURE__*/_jsxDEV(Card, {\n        border: \"secondary\",\n        className: styles.parentcard,\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          top: true,\n          width: \"100%\",\n          variant: \"top\",\n          src: us.profilepic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\" \", us.username, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"list-group-flush\",\n          children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: us.mail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Users, \"2t59MLPjMBt17aMFMoRJqRDjVNs=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/users.jsx"],"names":["React","useEffect","useState","swal","Card","ListGroupItem","ListGroup","styles","Navbardash","API","Users","setUsers","getUsers","get","then","res","result","data","error","console","log","deleteUser","id","willDelete","title","text","icon","dangerMode","delete","success","window","location","reload","e","display","usercardwrapper","map","us","parentcard","profilepic","username","mail"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport swal from 'sweetalert';\nimport { Card, ListGroupItem, ListGroup } from \"react-bootstrap\";\nimport styles from './usercard.module.css'\nimport Navbardash from \"../navbardash\";\n\nimport API from '../../../api';\n\nfunction Users() {\n\n    const [Users, setUsers] = useState([]);\n\n    const getUsers = async () => {\n        try {\n            await API.get(`users`).then((res) => {\n                const result = res.data;\n                setUsers(result);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n\n\n    const deleteUser = async (id) => {\n        const willDelete = await swal({\n            title: \"Delete\",\n            text: \"Are you sure?\",\n            icon: \"warning\",\n            dangerMode: true,\n        });\n\n        if (willDelete) {\n            try {\n                let res = await API.delete(`users/${id}`);\n                console.log(res.data);\n\n                if (res.data.success) {\n                    await swal(\"deleted\");\n                } else {\n                    await swal(\"\", res, \"error\");\n                }\n                window.location.reload();\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    };\n\n\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    return (\n        <div style={{ display: \"flex\", }}>\n            <Navbardash />\n\n\n\n            <div className={styles.usercardwrapper} >\n\n                {\n                    Users.map((us) => (\n\n\n                        <Card border=\"secondary\" className={styles.parentcard}   >\n\n                            <Card.Img top width=\"100%\"  variant=\"top\" src={us.profilepic} />\n                            <Card.Title> {us.username}  </Card.Title>\n                            <ListGroup className=\"list-group-flush\">\n                                <ListGroupItem>{us.mail}</ListGroupItem>\n                            </ListGroup>\n\n                        </Card>\n\n                    ))\n                }\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}