{"ast":null,"code":"var _jsxFileName = \"/var/www/html/MechanicalDelevery/react _part/src/Components/session/SessionProvider.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport CookieService from '../../CookieService';\nimport SessionContext from './SessionContext';\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SessionProvider({\n  children\n}) {\n  async function login({\n    username,\n    password\n  }) {\n    try {\n      let res = await fetch(\"http://localhost:3001/users/login\", {\n        method: \"post\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      let result = await res.json();\n      console.log(\"result is :\", result);\n\n      if (result.Token) {\n        const options = {\n          path: '/'\n        };\n        CookieService.set('Token', result.Token, options);\n        CookieService.set('_id', result._id, options);\n        CookieService.set('Role', result.Role, options);\n\n        /*#__PURE__*/\n        _jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this);\n      } else {\n        swal(\"username or password is not correct \", \" \", \"warning\");\n      }\n    } catch (e) {\n      alert(e);\n    }\n  }\n\n  async function logout(id) {\n    try {\n      await fetch(`http://localhost:3001/users/logout/${id}`, {\n        method: \"post\"\n      });\n      CookieService.remove(\"Token\");\n      CookieService.remove(\"_id\");\n      CookieService.remove(\"\");\n\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }, this);\n    } catch (e) {\n      alert(e);\n    }\n  }\n\n  const context = {\n    actions: {\n      login,\n      logout\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_c = SessionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionProvider\");","map":{"version":3,"sources":["/var/www/html/MechanicalDelevery/react _part/src/Components/session/SessionProvider.js"],"names":["React","Redirect","CookieService","SessionContext","swal","SessionProvider","children","login","username","password","res","fetch","method","headers","body","JSON","stringify","result","json","console","log","Token","options","path","set","_id","Role","e","alert","logout","id","remove","context","actions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAuC;AAIlD,iBAAeC,KAAf,CAAqB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAArB,EAA6C;AAGzC,QAAI;AAEA,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AACvDC,QAAAA,MAAM,EAAE,MAD+C;AAEvDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF8C;AAKvDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAAf;AALiD,OAAtC,CAArB;AAQA,UAAIQ,MAAM,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,MAA3B;;AACA,UAAIA,MAAM,CAACI,KAAX,EAAkB;AACd,cAAMC,OAAO,GAAG;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAhB;AACArB,QAAAA,aAAa,CAACsB,GAAd,CAAkB,OAAlB,EAA2BP,MAAM,CAACI,KAAlC,EAAyCC,OAAzC;AACApB,QAAAA,aAAa,CAACsB,GAAd,CAAkB,KAAlB,EAAyBP,MAAM,CAACQ,GAAhC,EAAqCH,OAArC;AACApB,QAAAA,aAAa,CAACsB,GAAd,CAAkB,MAAlB,EAA0BP,MAAM,CAACS,IAAjC,EAAuCJ,OAAvC;;AACA;AAAA,gBAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AACH,OAND,MAMO;AACHlB,QAAAA,IAAI,CAAC,sCAAD,EAAyC,GAAzC,EAA8C,SAA9C,CAAJ;AACH;AACJ,KArBD,CAqBE,OAAOuB,CAAP,EAAU;AACRC,MAAAA,KAAK,CAACD,CAAD,CAAL;AACH;AAEJ;;AAGD,iBAAeE,MAAf,CAAsBC,EAAtB,EAA0B;AAEtB,QAAI;AACA,YAAMnB,KAAK,CAAE,sCAAqCmB,EAAG,EAA1C,EAA6C;AACpDlB,QAAAA,MAAM,EAAE;AAD4C,OAA7C,CAAX;AAGAV,MAAAA,aAAa,CAAC6B,MAAd,CAAqB,OAArB;AACA7B,MAAAA,aAAa,CAAC6B,MAAd,CAAqB,KAArB;AACA7B,MAAAA,aAAa,CAAC6B,MAAd,CAAqB,EAArB;;AAGD;AAAA,cAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AACF,KAVD,CAUE,OAAOJ,CAAP,EAAU;AACRC,MAAAA,KAAK,CAACD,CAAD,CAAL;AACH;AAEJ;;AAED,QAAMK,OAAO,GAAG;AACZC,IAAAA,OAAO,EAAE;AACL1B,MAAAA,KADK;AAELsB,MAAAA;AAFK;AADG,GAAhB;AAOA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEG,OAAhC;AAAA,cACK1B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAjEuBD,e","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport CookieService from '../../CookieService';\nimport SessionContext from './SessionContext';\n\nimport swal from 'sweetalert';\n\nexport default function SessionProvider({ children }) {\n\n\n\n    async function login({ username, password }) {\n\n\n        try {\n\n            let res = await fetch(\"http://localhost:3001/users/login\", {\n                method: \"post\",\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({ username, password })\n\n            });\n            let result = await res.json();\n            console.log(\"result is :\", result);\n            if (result.Token) {\n                const options = { path: '/', };\n                CookieService.set('Token', result.Token, options);\n                CookieService.set('_id', result._id, options);\n                CookieService.set('Role', result.Role, options);\n                <Redirect to=\"/\" />\n            } else {\n                swal(\"username or password is not correct \", \" \", \"warning\");\n            }\n        } catch (e) {\n            alert(e);\n        }\n\n    }\n\n     \n    async function logout(id) {\n\n        try {\n            await fetch(`http://localhost:3001/users/logout/${id}`, {\n                method: \"post\",\n            });\n            CookieService.remove(\"Token\");\n            CookieService.remove(\"_id\");\n            CookieService.remove(\"\");\n\n\n           <Redirect to=\"/\"/>\n        } catch (e) {\n            alert(e);\n        }\n\n    }\n\n    const context = {\n        actions: {\n            login,\n            logout\n        }\n    }\n\n    return (\n        <SessionContext.Provider value={context}>\n            {children}\n        </SessionContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}