{"ast":null,"code":"var _jsxFileName = \"/var/www/html/MechanicalDelevery/react _part/src/Components/session/SessionProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport SessionContext from './SessionContext';\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SessionProvider({\n  children\n}) {\n  _s();\n\n  const [token, setToken] = useState('');\n  const [role, setRole] = useState('');\n  const [id, setId] = useState('');\n  let history = useHistory(); // useEffect(() => {\n  //     function initializeSession() {\n  //         let id = getCookie('id');\n  //         let access_token = getCookie('access_token');\n  //         if (access_token) fetch(`https://reqres.in/api/users/${id}`, {\n  //             headers: {\n  //                 'access_token': access_token\n  //             }\n  //         }).then(res => res.json()).then(res => {\n  //             let user = { ...res.data, access_token };\n  //             updateSession({ user });\n  //         });\n  //     }\n  //     initializeSession();\n  // }, []);\n  // function updateSession(nextSession) {\n  //     let value = typeof nextSession === \"function\" ?\n  //         nextSession : prevSession => ({ ...prevSession, ...nextSession });\n  //     setValue(value);\n  // }\n\n  async function login({\n    username,\n    password\n  }) {\n    try {\n      let res = await fetch(\"http://localhost:3001/users/login\", {\n        method: \"post\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      let result = await res.json();\n      console.log(\"result is :\", result);\n\n      if (result.Token) {\n        setToken(result.Token);\n        setRole(result.Role);\n        setId(result._id);\n        history.push(\"/\");\n      } else {\n        swal(\"username or password is not correct \", \" \", \"warning\");\n      }\n    } catch (e) {\n      alert(e);\n    }\n  } // function logout() {\n  //     updateSession({ user: { access_token: null } });\n  //     removeCookie('id');\n  //     removeCookie('access_token');\n  // }\n\n\n  const context = {\n    token,\n    role,\n    id,\n    actions: {\n      login // logout\n\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SessionProvider, \"sgm2D4C2L/q3hdvh28HcAY/7Mco=\", false, function () {\n  return [useHistory];\n});\n\n_c = SessionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionProvider\");","map":{"version":3,"sources":["/var/www/html/MechanicalDelevery/react _part/src/Components/session/SessionProvider.js"],"names":["React","useState","useHistory","SessionContext","swal","SessionProvider","children","token","setToken","role","setRole","id","setId","history","login","username","password","res","fetch","method","headers","body","JSON","stringify","result","json","console","log","Token","Role","_id","push","e","alert","context","actions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAuC;AAAA;;AAGlD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAAC,EAAD,CAA5B;AACA,MAAIY,OAAO,GAAGX,UAAU,EAAxB,CANkD,CAOlD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAeY,KAAf,CAAqB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAArB,EAA6C;AAIzC,QAAI;AAEA,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AACvDC,QAAAA,MAAM,EAAE,MAD+C;AAEvDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF8C;AAKvDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAAf;AALiD,OAAtC,CAArB;AAQA,UAAIQ,MAAM,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,MAA3B;;AAGA,UAAIA,MAAM,CAACI,KAAX,EAAkB;AACdpB,QAAAA,QAAQ,CAACgB,MAAM,CAACI,KAAR,CAAR;AACAlB,QAAAA,OAAO,CAACc,MAAM,CAACK,IAAR,CAAP;AACAjB,QAAAA,KAAK,CAACY,MAAM,CAACM,GAAR,CAAL;AACAjB,QAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACH,OALD,MAKO;AACH3B,QAAAA,IAAI,CAAC,sCAAD,EAAyC,GAAzC,EAA8C,SAA9C,CAAJ;AACH;AACJ,KAtBD,CAsBE,OAAO4B,CAAP,EAAU;AACRC,MAAAA,KAAK,CAACD,CAAD,CAAL;AACH;AAEJ,GA5DiD,CA8DlD;AACA;AACA;AACA;AACA;;;AAEA,QAAME,OAAO,GAAG;AACZ3B,IAAAA,KADY;AAEZE,IAAAA,IAFY;AAGZE,IAAAA,EAHY;AAIZwB,IAAAA,OAAO,EAAE;AACLrB,MAAAA,KADK,CAEL;;AAFK;AAJG,GAAhB;AAUA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEoB,OAAhC;AAAA,cACK5B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnFuBD,e;UAMNH,U;;;KANMG,e","sourcesContent":["import React, { useState, } from 'react';\nimport { useHistory } from 'react-router';\nimport SessionContext from './SessionContext';\nimport swal from 'sweetalert';\n\nexport default function SessionProvider({ children }) {\n\n\n    const [token, setToken] = useState('');\n    const [role, setRole] = useState('');\n    const [id, setId] = useState('');\n    let history = useHistory();\n    // useEffect(() => {\n\n    //     function initializeSession() {\n    //         let id = getCookie('id');\n    //         let access_token = getCookie('access_token');\n    //         if (access_token) fetch(`https://reqres.in/api/users/${id}`, {\n    //             headers: {\n    //                 'access_token': access_token\n    //             }\n    //         }).then(res => res.json()).then(res => {\n    //             let user = { ...res.data, access_token };\n    //             updateSession({ user });\n    //         });\n    //     }\n    //     initializeSession();\n    // }, []);\n\n    // function updateSession(nextSession) {\n    //     let value = typeof nextSession === \"function\" ?\n    //         nextSession : prevSession => ({ ...prevSession, ...nextSession });\n    //     setValue(value);\n    // }\n\n    async function login({ username, password }) {\n\n\n\n        try {\n\n            let res = await fetch(\"http://localhost:3001/users/login\", {\n                method: \"post\",\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({ username, password })\n            });\n\n            let result = await res.json();\n            console.log(\"result is :\", result);\n\n\n            if (result.Token) {\n                setToken(result.Token);\n                setRole(result.Role);\n                setId(result._id)\n                history.push(\"/\");\n            } else {\n                swal(\"username or password is not correct \", \" \", \"warning\");\n            }\n        } catch (e) {\n            alert(e);\n        }\n\n    }\n\n    // function logout() {\n    //     updateSession({ user: { access_token: null } });\n    //     removeCookie('id');\n    //     removeCookie('access_token');\n    // }\n\n    const context = {\n        token,\n        role,\n        id,\n        actions: {\n            login,\n            // logout\n        }\n    }\n\n    return (\n        <SessionContext.Provider value={context}>\n            {children}\n        </SessionContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}