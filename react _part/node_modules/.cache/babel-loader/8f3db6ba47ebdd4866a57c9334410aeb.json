{"ast":null,"code":"var _jsxFileName = \"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Userscard from './userscard';\nimport Navbardash from \"../navbardash\";\nimport { Table, Thead, Tbody, Tr, Th } from 'react-super-responsive-table';\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\nimport API from '../../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Users() {\n  _s();\n\n  const [Users, setUsers] = useState([]);\n\n  const getUsers = async () => {\n    await API.get(`users`).then(res => {\n      const result = res.data;\n      setUsers(result);\n    });\n  };\n\n  const deleteStudent = async id => {\n    const willDelete = await swal({\n      title: \"Delete\",\n      text: \"هل تريد حذف هذاالطالب؟\",\n      icon: \"warning\",\n      dangerMode: true\n    });\n\n    if (willDelete) {\n      try {\n        let res = await API.delete(`deleteSubsbystudentId/${id}`);\n        let res1 = await API.delete(`deletestudent/${id}`);\n        const result = res1.data.message;\n\n        if (res1.data.success && res.data.success) {\n          await swal(\"تم خذفه\", result, \"success\");\n        } else {\n          await swal(\"\", result, \"error\");\n        }\n\n        window.location.reload();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbardash, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Th, {\n            children: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"profilepic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: Users.map(us => /*#__PURE__*/_jsxDEV(Userscard, {\n          Userid: us._id,\n          Username: us.username,\n          Email: us.mail,\n          Profilepic: us.profilepic,\n          delete: deleteUser,\n          status: us.Status\n        }, us._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Users, \"2t59MLPjMBt17aMFMoRJqRDjVNs=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/users.jsx"],"names":["React","useEffect","useState","Userscard","Navbardash","Table","Thead","Tbody","Tr","Th","API","Users","setUsers","getUsers","get","then","res","result","data","deleteStudent","id","willDelete","swal","title","text","icon","dangerMode","delete","res1","message","success","window","location","reload","e","console","log","display","map","us","_id","username","mail","profilepic","deleteUser","Status"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Userscard from './userscard';\nimport Navbardash from \"../navbardash\";\nimport { Table, Thead, Tbody, Tr, Th } from 'react-super-responsive-table';\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\n\nimport API from '../../../api';\n\nfunction Users() {\n\n    const [Users, setUsers] = useState([]);\n\n    const getUsers = async () => {\n        await API.get(`users`).then((res) => {\n            const result = res.data;\n            setUsers(result);\n        });\n    };\n\n\n\n    const deleteStudent = async (id) => {\n        const willDelete = await swal({\n          title: \"Delete\",\n          text: \"هل تريد حذف هذاالطالب؟\",\n          icon: \"warning\",\n          dangerMode: true,\n        });\n    \n        if (willDelete) {\n          try {\n            let res = await API.delete(`deleteSubsbystudentId/${id}`);\n            let res1 = await API.delete(`deletestudent/${id}`);\n            const result = res1.data.message;\n            if (res1.data.success && res.data.success) {\n              await swal(\"تم خذفه\", result, \"success\");\n            } else {\n              await swal(\"\", result, \"error\");\n            }\n            window.location.reload();\n          } catch (e) {\n            console.log(e);\n          }\n        }\n      };\n\n\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    return (\n        <div style={{ display:\"flex\" , }}>\n            <Navbardash />\n\n            <Table>\n                <Thead>\n                    <Tr>\n                        <Th>username</Th>\n                        <Th>email</Th>\n                        <Th>profilepic</Th>\n                    </Tr>\n                </Thead>\n                <Tbody>\n                    {\n                        Users.map((us) => (\n                            <Userscard\n                                key={us._id}\n                                Userid={us._id}\n                                Username={us.username}\n                                Email={us.mail}\n                                Profilepic={us.profilepic}\n                                  delete={deleteUser}\n                                status={us.Status}\n                            />\n                        ))\n                    }\n                </Tbody>\n\n            </Table>\n        </div>\n    )\n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}