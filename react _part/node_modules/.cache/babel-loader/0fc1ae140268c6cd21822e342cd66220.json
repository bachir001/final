{"ast":null,"code":"var _jsxFileName = \"/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styles from './signin.module.css';\nimport Navbarvv from '../Homepage/navbarvv';\nimport { useState, useHistory } from 'react';\nimport CookieService from '../../CookieService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  let history = useHistory();\n  const [state, setValue] = useState({\n    username: \"\",\n    password: \"\",\n    mail: \"\"\n  });\n  const {\n    username,\n    password,\n    mail\n  } = state;\n\n  function setState(nextState) {\n    setValue(prevState => ({ ...prevState,\n      ...nextState\n    }));\n  }\n\n  function handleChange(e) {\n    let {\n      name,\n      value\n    } = e.target;\n    setState({\n      [name]: value\n    });\n  }\n}\n\n_s(Register, \"b7RMYpK+glEzBtKm1sAHNw+VSFc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nasync function handleSubmit(e) {\n  e.nativeEvent.preventDefault();\n\n  if (username && password) {\n    try {\n      let res = await fetch(\"http://localhost:3001/users/login\", {\n        method: \"post\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      let result = await res.json();\n      console.log(\"result is :\", result);\n\n      if (result.Token) {\n        const options = {\n          path: '/'\n        };\n        CookieService.set('Token', result.Token, options);\n        CookieService.set('_id', result._id, options);\n        CookieService.set('Role', result.Role, options);\n\n        if (CookieService.get(\"Token\") && CookieService.get(\"_id\") && CookieService.get(\"Role\")) {\n          history.push('/');\n        }\n      } else {\n        swal(\"username or password is not correct \", \" \", \"warning\");\n      }\n    } catch (e) {\n      alert(e);\n    }\n  } else {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbarvv, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleSubmit,\n        className: styles.genralform,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          className: styles.generalabel,\n          children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"username\",\n            name: \"username\",\n            onChange: handleChange,\n            className: \"inputu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mail\",\n          className: styles.generalabel,\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            name: \"mail\",\n            className: \"inputu\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: styles.generalabel,\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"password\",\n            name: \"password\",\n            className: \"inputu\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.submitbtn,\n          type: \"submit\",\n          value: \"signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/register.jsx"],"names":["React","styles","Navbarvv","useState","useHistory","CookieService","Register","history","state","setValue","username","password","mail","setState","nextState","prevState","handleChange","e","name","value","target","handleSubmit","nativeEvent","preventDefault","res","fetch","method","headers","body","JSON","stringify","result","json","console","log","Token","options","path","set","_id","Role","get","push","swal","alert","genralform","generalabel","submitbtn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './signin.module.css';\nimport Navbarvv from '../Homepage/navbarvv';\nimport { useState,useHistory } from 'react';\nimport CookieService from '../../CookieService';\n\nfunction Register() {\n\n    let history = useHistory();\n\n\n    const [state, setValue] = useState({\n        username: \"\",\n        password: \"\",\n        mail:\"\",\n    });\n\n    const { username, password, mail } = state;\n\n    function setState(nextState) {\n        setValue((prevState) => ({\n            ...prevState,\n            ...nextState,\n        }));\n    }\n\n    function handleChange(e) {\n        let { name, value } = e.target;\n        setState({ [name]: value });\n    }\n}\n\nasync function handleSubmit(e) {\n\n    e.nativeEvent.preventDefault();\n\n    if (username && password) {\n        try {\n\n            let res = await fetch(\"http://localhost:3001/users/login\", {\n                method: \"post\",\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({ username, password })\n\n            });\n            let result = await res.json();\n            console.log(\"result is :\", result);\n            if (result.Token) {\n                const options = { path: '/', };\n                CookieService.set('Token', result.Token, options);\n                CookieService.set('_id', result._id, options);\n                CookieService.set('Role', result.Role, options);\n\n                if (CookieService.get(\"Token\") && CookieService.get(\"_id\") && CookieService.get(\"Role\")) {\n                    history.push('/');\n                }\n            } else {\n                swal(\"username or password is not correct \", \" \", \"warning\");\n            }\n\n        } catch (e) {\n            alert(e);\n        }\n\n\n    }\n    else {\n\n    }\n    return (\n        <div>\n\n            <div>\n                <Navbarvv />\n                <form action=\"\" onSubmit={handleSubmit} className={styles.genralform}  >\n                    <label htmlFor=\"username\" className={styles.generalabel}>\n                        Username\n                        <input type=\"text\" placeholder=\"username\" name=\"username\" onChange={handleChange} className=\"inputu\" />\n                    </label>\n\n                    <label htmlFor=\"mail\" className={styles.generalabel}>\n                        Email\n                        <input type=\"email\" placeholder=\"Email\" name=\"mail\" className=\"inputu\" onChange={handleChange} />\n                    </label>\n\n                    <label htmlFor=\"password\" className={styles.generalabel}>\n                        Password\n                        <input type=\"password\" placeholder=\"password\" name=\"password\" className=\"inputu\" onChange={handleChange} />\n                    </label>\n                    <input className={styles.submitbtn} type=\"submit\" value=\"signin\" />\n                </form>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}