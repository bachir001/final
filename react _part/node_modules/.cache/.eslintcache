[{"/var/www/html/MechanicalDelevery/react _part/src/index.js":"1","/var/www/html/MechanicalDelevery/react _part/src/App.js":"2","/var/www/html/MechanicalDelevery/react _part/src/reportWebVitals.js":"3","/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/signin.jsx":"4","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/navbarvv.jsx":"5","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/banner.jsx":"6","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/homepage.jsx":"7","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/aboutus.jsx":"8","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/cardpart.jsx":"9","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/footer.jsx":"10","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/profile.jsx":"11","/var/www/html/MechanicalDelevery/react _part/src/api.js":"12","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/users.jsx":"13","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/sidebar.jsx":"14","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/addcard.jsx":"15","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/newuser.jsx":"16","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/edituser.jsx":"17","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/shops.jsx":"18","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/addshops.jsx":"19","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/newshops.jsx":"20","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/editshops.jsx":"21","/var/www/html/MechanicalDelevery/react _part/src/CookieService.js":"22","/var/www/html/MechanicalDelevery/react _part/src/LoginStatus.jsx":"23","/var/www/html/MechanicalDelevery/react _part/src/Components/shopsp/shopsp.jsx":"24","/var/www/html/MechanicalDelevery/react _part/src/Components/shopsp/addshop.jsx":"25","/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/register.jsx":"26"},{"size":547,"mtime":1631522960338,"results":"27","hashOfConfig":"28"},{"size":1922,"mtime":1646600283879,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1631517786798,"results":"30","hashOfConfig":"28"},{"size":3109,"mtime":1633943640588,"results":"31","hashOfConfig":"28"},{"size":2999,"mtime":1671537828426,"results":"32","hashOfConfig":"28"},{"size":563,"mtime":1632989218241,"results":"33","hashOfConfig":"28"},{"size":569,"mtime":1632874889209,"results":"34","hashOfConfig":"28"},{"size":448,"mtime":1632989513894,"results":"35","hashOfConfig":"28"},{"size":2315,"mtime":1633948159441,"results":"36","hashOfConfig":"28"},{"size":326,"mtime":1632994345679,"results":"37","hashOfConfig":"28"},{"size":3720,"mtime":1637847405750,"results":"38","hashOfConfig":"28"},{"size":98,"mtime":1631848157925,"results":"39","hashOfConfig":"28"},{"size":3249,"mtime":1633097304590,"results":"40","hashOfConfig":"28"},{"size":2328,"mtime":1655802527853,"results":"41","hashOfConfig":"28"},{"size":524,"mtime":1632360188537,"results":"42","hashOfConfig":"28"},{"size":2649,"mtime":1637147804999,"results":"43","hashOfConfig":"28"},{"size":3315,"mtime":1632706780491,"results":"44","hashOfConfig":"28"},{"size":8739,"mtime":1637338677166,"results":"45","hashOfConfig":"28"},{"size":590,"mtime":1632794833568,"results":"46","hashOfConfig":"28"},{"size":6117,"mtime":1637849033393,"results":"47","hashOfConfig":"28"},{"size":6838,"mtime":1633002821809,"results":"48","hashOfConfig":"28"},{"size":312,"mtime":1632742903151,"results":"49","hashOfConfig":"28"},{"size":276,"mtime":1632794821025,"results":"50","hashOfConfig":"28"},{"size":5911,"mtime":1633948215572,"results":"51","hashOfConfig":"28"},{"size":5163,"mtime":1655805157589,"results":"52","hashOfConfig":"28"},{"size":3740,"mtime":1633948421586,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"td6hy2",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/var/www/html/MechanicalDelevery/react _part/src/index.js",[],["111","112"],"/var/www/html/MechanicalDelevery/react _part/src/App.js",[],"/var/www/html/MechanicalDelevery/react _part/src/reportWebVitals.js",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/signin.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/navbarvv.jsx",["113"],"import React from 'react';\nimport { ToolsIcon } from '@iconbox/oct';\nimport CookieService from '../../CookieService';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport menu from './menu.svg'\nimport { Nav, Navbar, NavDropdown, Container } from 'react-bootstrap';\n\n\nconst x = {};\n\nfunction Navbarvv() {\n\n    let history = useHistory();\n\n    if (CookieService.get(\"Token\")) {\n        var id = CookieService.get(\"_id\");\n    }\n\n\n    const logoutevent = async (e) => {\n\n        e.preventDefault();\n        //  1070FD\n        try {\n            const res = await fetch(`http://localhost:3001/users/logout/${id}`, {\n                method: \"post\",\n            });\n            if (res) {\n\n                CookieService.remove(\"Token\");\n                CookieService.remove(\"_id\");\n                CookieService.remove(\"Role\");\n                history.push(\"/\");\n            }\n\n\n\n        } catch (e) {\n            alert(e);\n        }\n    };\n\n\n\n\n    return (\n\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"danger\">\n            <Container>\n\n                <Navbar.Brand href=\"/\">\n                    <ToolsIcon className=\"navdrop\" style={{ width: \"30px\" ,color:\"#fff\"}} />\n                </Navbar.Brand>\n\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" style={{ marginTop: \"1.2rem\", color: \"#212529\", backgroundImage: `url(${menu})`, backgroundSize: \"20px\", backgroundRepeat: \"no-repeat\" }} />\n                <Navbar.Collapse id=\"responsive-navbar-nav\" >\n                    <Nav className=\"me-auto\" >\n                    </Nav>\n                    <Nav >\n\n                        {CookieService.get(\"Token\") ? (\n\n                            <NavDropdown className=\"navdrop\" style={{ color: '#fff' }} title=\"Me\" id=\"collasible-nav-dropdown\">\n                                <NavDropdown.Item href=\"/profile\">Profile</NavDropdown.Item>\n                                <NavDropdown.Item href=\"/addshop\">Add Shop</NavDropdown.Item>\n                                <NavDropdown.Divider />\n                                <Link to=\"\" className=\"nav_link nav_logout\"\n                                    style={{ textDecoration: 'none', color: \"#1E2125\", marginLeft: \"12px\" }}\n                                    onClick={logoutevent}>\n                                    <i className=\"bx bx-log-out bx-tada nav__icon\"></i>\n                                    <span className=\"nav__name\">Logout</span>\n                                </Link>\n                            </NavDropdown>\n                        ) : (\n\n                            <Nav.Link className=\"navdrop\" href=\"/signin\" style={{ color: '#fff' }}>Signin</Nav.Link>\n\n                        )}\n\n\n                        <Nav.Link className=\"navdrop\" href=\"/shopsp\" style={{ color: '#fff' }}>Shops</Nav.Link>\n\n                  \n\n                    </Nav>\n\n\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default Navbarvv\n","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/banner.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/homepage.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/aboutus.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/cardpart.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/footer.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/profile.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/api.js",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/users.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/sidebar.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/addcard.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/newuser.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/edituser.jsx",["114"],"import React from 'react';\nimport API from '../../../api';\nimport Sidebar from '../sidebar';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport styles from './userdesign.module.css';\n\nfunction Edituser({ match }) {\n\n    const id = match.params.id;\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [profilepic, setProfilepic] = useState([]);\n    let history=useHistory();\n\n \n\n    const onChangeFile =  (e) => {\n\n        e.preventDefault(e);\n       let file =  e.target.files[0];\n        setProfilepic(file);\n\n    }\n    const getUser = async () => {\n        try {\n            await API.get(`users/${id}`).then((res) => {\n                const result = res.data;\n                setUsername(result.username);\n                setEmail(result.mail);\n                setProfilepic(result.profilepic);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const edituser = async (e) => {\n        e.preventDefault(e);\n\n        try {\n\n            const body = new FormData();\n\n            body.append('username', username);\n            body.append('mail', email);\n            body.append('password', password);\n            body.append('profilepic', profilepic);\n\n\n\n             await API.put(`users/${id}`, body, {\n                headers: {\n                    'Accept': 'multipart/form-data',\n                },\n            });\n            history.push('/users');\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        getUser();\n    }, []);\n\n    return (\n\n        <div className={styles.adduserwrapper}>\n\n            <Sidebar />\n\n            <form onSubmit={edituser} className={styles.genralform}>\n\n\n                <label htmlFor=\"username\" className={styles.generalabel}>\n                    Username :\n                    <input className=\"inputu\" type=\"text\" name=\"username\" value={username} required onChange={(e) => { setUsername(e.target.value) }} />\n                </label>\n\n\n                <label htmlFor=\"email\" className={styles.generalabel}>\n                    Email :\n                    <input className=\"inputu\" type=\"email\" name=\"email\" value={email} required onChange={(e) => { setEmail(e.target.value) }} />\n                </label>\n\n\n                <label htmlFor=\"password\" className={styles.generalabel}>\n                    Password :\n                    <input\n                        className=\"inputu\"\n                        type=\"password\"\n                        name=\"password\"\n                        \n                        onChange={(e) => { setPassword(e.target.value) }} />\n                </label>\n\n                <div>\n                    <label htmlFor=\"pic\" className={styles.chooseimg}>\n                        choose image\n                    </label>\n                    <input className={styles.fileinput} type=\"file\" id=\"pic\" accept=\"image/*\" multiple={false} onChange={onChangeFile} />\n                </div>\n                         \n                <div>\n                    <input className={styles.submitbtn} type=\"submit\" value=\"Update\" />\n                </div>\n\n            </form>\n\n\n\n        </div>\n\n    )\n\n\n\n}\n\nexport default Edituser;\n","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/shops.jsx",["115"],"import { ListGroupItem, ListGroup } from 'react-bootstrap';\nimport CookieService from '../../../CookieService';\nimport { React, useState, useEffect } from 'react';\nimport styles from './shopsdesign.module.css';\nimport { Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Addcard from './addshops';\nimport swal from 'sweetalert';\nimport API from '../../../api';\nimport Sidebar from '../sidebar';\n\n\n\nfunction Shops() {\n\n\n    const [shops, setShops] = useState([]);\n    const [usershops, setUsershops] = useState([]);\n    const ide = CookieService.get(\"_id\");\n    const role = CookieService.get(\"Role\");\n\n\n    const getShops = async () => {\n        try {\n            await API.get(`shops`).then((res) => {\n                const result = res.data;\n                setShops(result);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n\n\n    const getUsershops = async () => {\n\n        try {\n            await API.get(`shops/geta/${ide}`).then((res) => {\n                const result = res.data;\n                setUsershops(result);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n\n\n    const deleteShop = async (id) => {\n        const willDelete = await swal({\n            title: \"Delete\",\n            text: \"Are you sure?\",\n            icon: \"warning\",\n            dangerMode: true,\n        });\n\n        if (willDelete) {\n            try {\n                let res = await API.delete(`shops/${id}`);\n\n                if (res.data.deletedCount === 1) {\n                    await swal({ text: \"deleted\", icon: \"success\" });\n                } else {\n                    await swal(\"\", res, \"error\");\n                }\n                window.location.reload();\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    };\n\n\n    useEffect(() => {\n        getShops();\n        getUsershops();\n    }, []);\n\n    return (\n\n        <div className={styles.shopswrapper}>\n\n            <div>\n                <Sidebar />\n            </div>\n\n\n\n            {role !== \"user\" ? (\n                <div className={styles.shopscard}>\n\n                    <Addcard title=\"Add Shops\" route=\"/shops/add\" />\n                    {shops.map((sh) => {\n                        return (\n                            <>\n                                <Col style={{ marginBottom: \"2rem\" }} key={sh._id} >\n                                    <div className={styles.bordercard} >\n                                        <div className={styles.imgwrapper}>\n                                            <button\n                                                style={{ backgroundColor: '#fff', color: '#333333', padding: '4.5px', paddingLeft: '8.5px', borderTop: '0', position: 'absolute', top: '0', right: '0', borderStyle: \"none\", borderBottomLeftRadius: \"10%\" }}\n                                                className={styles.link}\n                                                onClick={() => { deleteShop(sh._id) }}\n                                            >\n                                                <i className=\"far fa-trash-alt\"></i>\n\n                                            </button>\n                                            <Link className=\"linksite\" to={`shops/edit/${sh._id}`}>\n                                                <img\n                                                    className={styles.card_shopimg}\n                                                    src={`http://localhost:3001/uploads/${sh.shopimg}`}\n                                                    alt=\"logo img\"\n                                                    height={150}\n                                                    width={250}\n                                                />\n                                            </Link>\n                                        </div>\n                                        <div classname={styles.cardbody}>\n\n                                            <h6 className={styles.cardt} >\n                                                {sh.shopname}\n                                            </h6>\n                                            <Card.Text>\n\n                                                <ListGroup className=\"list-group-flush\">\n                                                    <ListGroupItem>  {sh.locationInfo} </ListGroupItem>\n                                                    <ListGroupItem className={styles.phoneshops}>  {sh.phonenumber} </ListGroupItem>\n                                                    {sh.accept !== \"no\" ? (\n\n                                                        <ListGroupItem> <i className=\"fas fa-check-circle fa-2x\"></i>  </ListGroupItem>\n                                                    ) : (\n                                                        <ListGroupItem>  <i className=\"far fa-times-circle fa-2x\"></i> </ListGroupItem>\n\n                                                    )}\n                                                </ListGroup>\n\n                                            </Card.Text>\n                                        </div>\n                                    </div>\n                                </Col>\n\n                            </>\n                        )\n                    })}\n                </div>\n\n            ) : (\n                <div className={styles.shopscard} style={{ height: \"575px\" }} >\n\n                    <Addcard title=\"Add Shops\" route=\"/shops/add\" />\n                    {usershops.map((sh) => {\n                        return (\n                            <>\n                                <Col style={{ marginBottom: \"2rem\" }} key={sh._id} >\n                                    <div className={styles.bordercard} >\n                                        <div className={styles.imgwrapper}>\n                                            <button\n                                                style={{ backgroundColor: '#fff', color: '#333333', padding: '4.5px', paddingLeft: '8.5px', borderTop: '0', position: 'absolute', top: '0', right: '0', borderStyle: \"none\", borderBottomLeftRadius: \"10%\" }}\n                                                className={styles.link}\n                                                onClick={() => { deleteShop(sh._id) }}\n                                            >\n                                                <i className=\"far fa-trash-alt\"></i>\n\n                                            </button>\n                                            <Link className=\"linksite\" to={`shops/edit/${sh._id}`}>\n                                                <img\n                                                    className={styles.card_shopimg}\n                                                    src={`http://localhost:3001/uploads/${sh.shopimg}`}\n                                                    alt=\"logo img\"\n                                                    height={150}\n                                                    width={250}\n                                                />\n                                            </Link>\n                                        </div>\n                                        <div classname={styles.cardbody}>\n\n                                            <h6 className={styles.cardt} >\n                                                {sh.shopname}\n                                            </h6>\n                                            <Card.Text>\n\n                                                <ListGroup className=\"list-group-flush\">\n                                                    <ListGroupItem>  {sh.locationInfo} </ListGroupItem>\n                                                    <ListGroupItem className={styles.phoneshops}>  {sh.phonenumber} </ListGroupItem>\n                                                    {sh.accept !== \"no\" ? (\n\n                                                        <ListGroupItem> <i className=\"fas fa-check-circle fa-2x\"></i>  </ListGroupItem>\n                                                    ) : (\n                                                        <ListGroupItem>  <i className=\"far fa-times-circle fa-2x\"></i> </ListGroupItem>\n\n                                                    )}\n                                                </ListGroup>\n\n                                            </Card.Text>\n                                        </div>\n                                    </div>\n                                </Col>\n\n                            </>\n                        )\n                    })}\n                </div>\n            )}\n\n\n\n        </div >\n\n    )\n}\n\nexport default Shops\n","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/addshops.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/newshops.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/editshops.jsx",["116"],"import { React, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport styles from '../users/userdesign.module.css';\nimport CookieService from '../../../CookieService';\nimport { State, City } from 'country-state-city';\nimport LoginStatus from '../../../LoginStatus';\nimport Sidebar from '../sidebar';\nimport API from '../../../api';\n\n\n\n\n\nfunction Editshop({ match }) {\n\n    const id = match.params.id;\n    const ide = CookieService.get(\"_id\");\n    const role = CookieService.get(\"Role\");\n    const [shopname, setShopname] = useState();\n    const [locationInfo, setLocationInfo] = useState();\n    const [phonenumber, setPhonenumber] = useState();\n    const [shopimg, setShopimg] = useState();\n    const [accept, setAccept] = useState();\n    const [region, setRegion] = useState('nothing');\n    const [cities, setCities] = useState([]);\n\n    let history = useHistory();\n\n\n\n    var file;\n\n    const onChangeFile = async (e) => {\n        e.preventDefault(e);\n        file = await e.target.files[0];\n        setShopimg(file);\n\n    }\n\n\n    const leb = State.getStatesOfCountry('LB');\n\n\n\n\n    const dealwithregion = async (code) => {\n\n        setRegion(\"filled\");\n\n        setCities(City.getCitiesOfState('LB', code.toString()));\n\n    }\n\n\n    const getShop = async () => {\n        try {\n            await API.get(`shops/${id}`).then((res) => {\n                const result = res.data;\n                setShopname(result.shopname);\n                setLocationInfo(result.locationInfo);\n                setPhonenumber(result.phonenumber);\n                setShopimg(result.shopimg);\n                setAccept(result.accept);\n                // console.log(\"result\",result.accept);\n\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const edituser = async (e) => {\n\n        e.preventDefault(e);\n\n        try {\n\n            const body = new FormData();\n\n            body.append('shopname', shopname);\n            body.append('phonenumber', phonenumber);\n            body.append('locationInfo', locationInfo);\n            body.append('shopimg', shopimg);\n            body.append('accept', accept);\n            body.append('shopadder', ide);\n\n            await API.put(`shops/${id}`, body, {\n                headers: {\n                    'Accept': 'multipart/form-data',\n                },\n            });\n\n            history.push('/shops');\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        getShop();\n    }, []);\n\n\n    return (\n\n        <div className={styles.adduserwrapper}>\n\n            <LoginStatus />\n\n            <Sidebar />\n\n            <form onSubmit={edituser} className={styles.genralform}>\n\n\n                <label htmlFor=\"shopname\" className={styles.generalabel}>\n                    shopname :\n                    <input className=\"inputu\" type=\"text\" name=\"shopname\" value={shopname} onChange={(e) => { setShopname(e.target.value) }} required />\n                </label>\n\n\n                <label htmlFor=\"phonenumber\" className={styles.generalabel}>\n                    phonenumber :\n                    <input className=\"inputu\" type=\"text\" name=\"phonenumber\" value={phonenumber} onChange={(e) => { setPhonenumber(e.target.value) }} required />\n                </label>\n\n\n                <label htmlFor=\"regionInfo\" >\n                    Select Region :\n                    <br />\n                    <select\n\n                        name=\"regionInfo\"\n                        className=\"inputu\"\n                        onChange={e => dealwithregion(e.target.value)}\n                    >\n                        <option value=\"\">None</option>\n\n                        {leb.map((lb) => {\n                            return (\n                                <option\n                                    value={lb.isoCode}\n                                    key={lb.name}\n                                >{lb.name}\n                                </option>\n                            )\n                        })}\n                    </select>\n\n                </label>\n\n                <div>\n\n                </div>\n\n\n                {region !== \"nothing\" ? (\n\n                    <div>\n\n                        <label htmlFor=\"regionInfo\" >\n\n                            Select City:\n                            <br />\n                            <select\n                                required\n                                name=\"locationInfo\"\n                                className=\"inputu\"\n                                onChange={e => setLocationInfo(e.target.value)}\n                            >\n                                <option value=\"\">None</option>\n\n                                {cities.map((ct) => {\n                                    return (\n                                        <option\n                                            value={ct.name}\n                                            key={ct.name}\n                                        >{ct.name}\n                                        </option>\n                                    )\n                                })}\n\n                            </select>\n\n                        </label>\n\n                        <p>\n\n                        </p>\n\n                    </div>\n                ) : (\n                    <p> </p>\n                )}\n\n                {role !== \"user\" ? (\n\n                    <div >\n                        <p style={{ fontSize: \"18px\" }}>  shop approvement : </p>\n                        <input\n                            type=\"radio\"\n                            name=\"accepted\"\n                            value={\"yes\"}\n                            onChange={(e) => setAccept(e.target.value)}\n                            \n                        />\n                        yes\n\n                        <input\n                            type=\"radio\"\n                            className={styles.noradio}\n                            name=\"notaccepted\"\n                            value={\"no\"}\n                            onChange={(e) => setAccept(e.target.value)}\n                            \n                        />\n                        no\n                    </div>\n                ) : (\n                    <p> </p>\n                )}\n                \n                <div>\n                    <label htmlFor=\"pic\" className={styles.chooseimg}>\n                        choose image\n                    </label>\n                    <input className={styles.fileinput} type=\"file\" id=\"pic\" accept=\"image/*\" multiple={false} onChange={onChangeFile} />\n                </div>\n\n                <div>\n                    <input className={styles.submitbtn} type=\"submit\" value=\"Update\" />\n                </div>\n\n            </form>\n\n        </div>\n\n    )\n}\n\nexport default Editshop;\n","/var/www/html/MechanicalDelevery/react _part/src/CookieService.js",[],"/var/www/html/MechanicalDelevery/react _part/src/LoginStatus.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/shopsp/shopsp.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/shopsp/addshop.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/register.jsx",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":10,"column":7,"nodeType":"123","messageId":"124","endLine":10,"endColumn":8},{"ruleId":"125","severity":1,"message":"126","line":67,"column":8,"nodeType":"127","endLine":67,"endColumn":10,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":78,"column":8,"nodeType":"127","endLine":78,"endColumn":10,"suggestions":"130"},{"ruleId":"125","severity":1,"message":"131","line":102,"column":8,"nodeType":"127","endLine":102,"endColumn":10,"suggestions":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'x' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has a missing dependency: 'getUsershops'. Either include it or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'getShop'. Either include it or remove the dependency array.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [getUser]",{"range":"144","text":"145"},"Update the dependencies array to be: [getUsershops]",{"range":"146","text":"147"},"Update the dependencies array to be: [getShop]",{"range":"148","text":"149"},[1655,1657],"[getUser]",[1934,1936],"[getUsershops]",[2515,2517],"[getShop]"]