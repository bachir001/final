[{"/var/www/html/MechanicalDelevery/react _part/src/index.js":"1","/var/www/html/MechanicalDelevery/react _part/src/App.js":"2","/var/www/html/MechanicalDelevery/react _part/src/reportWebVitals.js":"3","/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/signin.jsx":"4","/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/signup.jsx":"5","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/navbarvv.jsx":"6","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/banner.jsx":"7","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/homepage.jsx":"8","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/aboutus.jsx":"9","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/cardpart.jsx":"10","/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/footer.jsx":"11","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/profile.jsx":"12","/var/www/html/MechanicalDelevery/react _part/src/api.js":"13","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/users.jsx":"14","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/sidebar.jsx":"15","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/addcard.jsx":"16","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/newuser.jsx":"17","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/edituser.jsx":"18","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/shops.jsx":"19","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/addshops.jsx":"20","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/newshops.jsx":"21","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/editshops.jsx":"22","/var/www/html/MechanicalDelevery/react _part/src/CookieService.js":"23","/var/www/html/MechanicalDelevery/react _part/src/LoginStatus.jsx":"24"},{"size":547,"mtime":1631522960338,"results":"25","hashOfConfig":"26"},{"size":1666,"mtime":1632794681457,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1631517786798,"results":"28","hashOfConfig":"26"},{"size":2903,"mtime":1632788394618,"results":"29","hashOfConfig":"26"},{"size":527,"mtime":1631515441932,"results":"30","hashOfConfig":"26"},{"size":3187,"mtime":1632836642256,"results":"31","hashOfConfig":"26"},{"size":568,"mtime":1631848222096,"results":"32","hashOfConfig":"26"},{"size":588,"mtime":1632817251461,"results":"33","hashOfConfig":"26"},{"size":553,"mtime":1632834478862,"results":"34","hashOfConfig":"26"},{"size":2376,"mtime":1632832902321,"results":"35","hashOfConfig":"26"},{"size":331,"mtime":1631819181461,"results":"36","hashOfConfig":"26"},{"size":2754,"mtime":1632360146761,"results":"37","hashOfConfig":"26"},{"size":98,"mtime":1631848157925,"results":"38","hashOfConfig":"26"},{"size":3249,"mtime":1632555666822,"results":"39","hashOfConfig":"26"},{"size":2631,"mtime":1632470015470,"results":"40","hashOfConfig":"26"},{"size":524,"mtime":1632360188537,"results":"41","hashOfConfig":"26"},{"size":2649,"mtime":1632723602339,"results":"42","hashOfConfig":"26"},{"size":3315,"mtime":1632706780491,"results":"43","hashOfConfig":"26"},{"size":4909,"mtime":1632831522614,"results":"44","hashOfConfig":"26"},{"size":590,"mtime":1632794833568,"results":"45","hashOfConfig":"26"},{"size":5718,"mtime":1632794885621,"results":"46","hashOfConfig":"26"},{"size":6444,"mtime":1632796881856,"results":"47","hashOfConfig":"26"},{"size":312,"mtime":1632742903151,"results":"48","hashOfConfig":"26"},{"size":276,"mtime":1632794821025,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1lystao",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/var/www/html/MechanicalDelevery/react _part/src/index.js",[],["101","102"],"/var/www/html/MechanicalDelevery/react _part/src/App.js",[],"/var/www/html/MechanicalDelevery/react _part/src/reportWebVitals.js",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/signin.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/LoginRegister/signup.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/navbarvv.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/banner.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/homepage.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/aboutus.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/cardpart.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Homepage/footer.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/profile.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/api.js",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/users.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/sidebar.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/addcard.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/newuser.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/users/edituser.jsx",["103"],"import React from 'react';\nimport API from '../../../api';\nimport Sidebar from '../sidebar';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport styles from './userdesign.module.css';\n\nfunction Edituser({ match }) {\n\n    const id = match.params.id;\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [profilepic, setProfilepic] = useState([]);\n    let history=useHistory();\n\n \n\n    const onChangeFile =  (e) => {\n\n        e.preventDefault(e);\n       let file =  e.target.files[0];\n        setProfilepic(file);\n\n    }\n    const getUser = async () => {\n        try {\n            await API.get(`users/${id}`).then((res) => {\n                const result = res.data;\n                setUsername(result.username);\n                setEmail(result.mail);\n                setProfilepic(result.profilepic);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const edituser = async (e) => {\n        e.preventDefault(e);\n\n        try {\n\n            const body = new FormData();\n\n            body.append('username', username);\n            body.append('mail', email);\n            body.append('password', password);\n            body.append('profilepic', profilepic);\n\n\n\n             await API.put(`users/${id}`, body, {\n                headers: {\n                    'Accept': 'multipart/form-data',\n                },\n            });\n            history.push('/users');\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        getUser();\n    }, []);\n\n    return (\n\n        <div className={styles.adduserwrapper}>\n\n            <Sidebar />\n\n            <form onSubmit={edituser} className={styles.genralform}>\n\n\n                <label htmlFor=\"username\" className={styles.generalabel}>\n                    Username :\n                    <input className=\"inputu\" type=\"text\" name=\"username\" value={username} required onChange={(e) => { setUsername(e.target.value) }} />\n                </label>\n\n\n                <label htmlFor=\"email\" className={styles.generalabel}>\n                    Email :\n                    <input className=\"inputu\" type=\"email\" name=\"email\" value={email} required onChange={(e) => { setEmail(e.target.value) }} />\n                </label>\n\n\n                <label htmlFor=\"password\" className={styles.generalabel}>\n                    Password :\n                    <input\n                        className=\"inputu\"\n                        type=\"password\"\n                        name=\"password\"\n                        \n                        onChange={(e) => { setPassword(e.target.value) }} />\n                </label>\n\n                <div>\n                    <label htmlFor=\"pic\" className={styles.chooseimg}>\n                        choose image\n                    </label>\n                    <input className={styles.fileinput} type=\"file\" id=\"pic\" accept=\"image/*\" multiple={false} onChange={onChangeFile} />\n                </div>\n                         \n                <div>\n                    <input className={styles.submitbtn} type=\"submit\" value=\"Update\" />\n                </div>\n\n            </form>\n\n\n\n        </div>\n\n    )\n\n\n\n}\n\nexport default Edituser;\n","/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/shops.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/addshops.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/newshops.jsx",[],"/var/www/html/MechanicalDelevery/react _part/src/Components/Dashboard/shops/editshops.jsx",["104"],"import { React, useState, useEffect  } from 'react';\nimport { useHistory } from 'react-router';\nimport styles from '../users/userdesign.module.css';\nimport { State, City } from 'country-state-city';\nimport LoginStatus from '../../../LoginStatus';\nimport Sidebar from '../sidebar';\nimport API from '../../../api';\n\n\n\n\n\nfunction Editshop({ match }) {\n\n    const id = match.params.id;\n    const [shopname, setShopname] = useState();\n    const [locationInfo, setLocationInfo] = useState();\n    const [phonenumber, setPhonenumber] = useState();\n    const [shopimg, setShopimg] = useState();\n    const [accept, setAccept] = useState();\n    const [region, setRegion] = useState('nothing');\n    const [cities, setCities] = useState([]);\n    let history=useHistory();\n\n\n\n    var file;\n\n    const onChangeFile = async (e) => {\n        e.preventDefault(e);\n        file = await e.target.files[0];\n        setShopimg(file);\n\n    }\n\n\n    const leb = State.getStatesOfCountry('LB');\n\n\n\n\n    const dealwithregion = async (code) => {\n\n        setRegion(\"filled\");\n\n        setCities(City.getCitiesOfState('LB', code.toString()));\n\n    }\n\n\n    const getShop = async () => {\n        try {\n            await API.get(`shops/${id}`).then((res) => {\n                const result = res.data;\n                setShopname(result.shopname);\n                setLocationInfo(result.locationInfo);\n                setPhonenumber(result.phonenumber);\n                setShopimg(result.shopimg)\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const edituser = async (e) => {\n\n        e.preventDefault(e);\n\n        try {\n\n            const body = new FormData();\n\n            body.append('shopname', shopname);\n            body.append('phonenumber', phonenumber);\n            body.append('locationInfo', locationInfo);\n            body.append('shopimg', shopimg);\n            body.append('accept', accept);\n            body.append('shopadder', '614eee3bae058617c4e7c960');\n            await API.put(`shops/${id}`, body, {\n                headers: {\n                    'Accept': 'multipart/form-data',\n                },\n            });\n\n            history.push('/shops');\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        getShop();\n    }, []);\n\n\n    return (\n\n        <div className={styles.adduserwrapper}>\n\n            <LoginStatus/>\n\n            <Sidebar />\n\n            <form onSubmit={edituser} className={styles.genralform}>\n\n\n                <label htmlFor=\"shopname\" className={styles.generalabel}>\n                    shopname :\n                    <input className=\"inputu\" type=\"text\" name=\"shopname\" value={shopname} onChange={(e) => { setShopname(e.target.value) }} required />\n                </label>\n\n\n                <label htmlFor=\"phonenumber\" className={styles.generalabel}>\n                    phonenumber :\n                    <input className=\"inputu\" type=\"text\" name=\"phonenumber\" value={phonenumber} onChange={(e) => { setPhonenumber(e.target.value) }} required />\n                </label>\n\n\n                <label htmlFor=\"regionInfo\" >\n                    Select Region :\n                    <br />\n                    <select\n                        \n                        name=\"regionInfo\"\n                        className=\"inputu\"\n                        onChange={e => dealwithregion(e.target.value)}\n                    >\n                        <option value=\"\">None</option>\n\n                        {leb.map((lb) => {\n                            return (\n                                <option\n                                    value={lb.isoCode}\n                                    key={lb.name}\n                                >{lb.name}\n                                </option>\n                            )\n                        })}\n                    </select>\n\n                </label>\n\n                <div>\n\n                </div>\n\n\n                {region !== \"nothing\" ? (\n\n                    <div>\n\n                        <label htmlFor=\"regionInfo\" >\n\n                            Select City:\n                            <br />\n                            <select\n                                required\n                                name=\"locationInfo\"\n                                className=\"inputu\"\n                                onChange={e => setLocationInfo(e.target.value)}\n                            >\n                                <option value=\"\">None</option>\n\n                                {cities.map((ct) => {\n                                    return (\n                                        <option\n                                            value={ct.name}\n                                            key={ct.name}\n                                        >{ct.name}\n                                        </option>\n                                    )\n                                })}\n\n                            </select>\n\n                        </label>\n\n                        <p>\n\n                        </p>\n\n                    </div>\n                ) : (\n                    <p> </p>\n                )}\n\n                <div >\n                    <p style={{ fontSize: \"18px\" }}>  shop approvement : </p>\n                    <input\n                        type=\"radio\"\n                        name=\"paid\"\n                        value={\"yes\"}\n                        onChange={(e) => setAccept(e.target.value)}\n                        required\n                    />\n                    yes\n\n                    <input\n                        type=\"radio\"\n                        className={styles.noradio}\n                        name=\"paid\"\n                        value={\"no\"}\n                        onChange={(e) => setAccept(e.target.value)}\n                        required\n                    />\n                    no\n                </div>\n\n                <div>\n                    <label htmlFor=\"pic\" className={styles.chooseimg}>\n                        choose image\n                    </label>\n                    <input className={styles.fileinput} type=\"file\" id=\"pic\" accept=\"image/*\" multiple={false} onChange={onChangeFile} />\n                </div>\n\n                <div>\n                    <input className={styles.submitbtn} type=\"submit\" value=\"Update\" />\n                </div>\n\n            </form>\n\n        </div>\n\n    )\n}\n\nexport default Editshop;\n","/var/www/html/MechanicalDelevery/react _part/src/CookieService.js",[],"/var/www/html/MechanicalDelevery/react _part/src/LoginStatus.jsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":67,"column":8,"nodeType":"111","endLine":67,"endColumn":10,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":94,"column":8,"nodeType":"111","endLine":94,"endColumn":10,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has a missing dependency: 'getShop'. Either include it or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [getUser]",{"range":"123","text":"124"},"Update the dependencies array to be: [getShop]",{"range":"125","text":"126"},[1655,1657],"[getUser]",[2297,2299],"[getShop]"]